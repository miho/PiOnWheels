public class ServoMount {
 
    //standard servo
    private double servoWidth = 40.0;
    private double servoThickness = 19.0;
    private double borderThickness = 2;
    private double overlap = 3;
    private double servoMountHeight = 20;

    private double boardMountingThickness = 2;
    private double boardHolderLength = 12;
    
    private double boardMountingWidth = 8.1;
    
    private double pegHeight= 1;
    private double pegToothHeight = 0.6;
    private double pegOverlap = 0.5;

    public CSG toCSGSimple() {

        return Extrude.points(new Vector3d(0, 0, servoMountHeight),
                new Vector3d(0, servoThickness),
                new Vector3d(overlap, servoThickness),
                new Vector3d(-borderThickness, servoThickness + borderThickness),
                new Vector3d(-borderThickness, -borderThickness),
                new Vector3d(servoWidth + borderThickness, -borderThickness),
                new Vector3d(servoWidth + borderThickness, servoThickness + borderThickness),
                new Vector3d(servoWidth - overlap, servoThickness),
                new Vector3d(servoWidth, servoThickness),
                new Vector3d(servoWidth, 0),
                new Vector3d(0, 0)
        );
    }

    public CSG toCSG() {
        CSG bm1 = boardMount().transformed(Transform.unity().rotY(90).rotZ(90).
translate(borderThickness, borderThickness, -boardHolderLength + borderThickness));
        CSG bm2 = bm1.transformed(Transform.unity().
translateX(servoWidth -boardHolderLength + borderThickness*2));
        CSG sm = toCSGSimple();

        return sm.union(bm1).union(bm2);
    }

    private CSG boardMount() {

        double h = boardMountingWidth;
        
        List<Vector3d> points = Arrays.asList(Vector3d.ZERO,
                new Vector3d(0, -borderThickness),
                new Vector3d(boardMountingThickness + borderThickness, -borderThickness),
                new Vector3d(boardMountingThickness + borderThickness, h + pegToothHeight+pegHeight),
                new Vector3d(boardMountingThickness - pegOverlap, h + pegToothHeight),
                 new Vector3d(boardMountingThickness, h),
                new Vector3d(boardMountingThickness, 0)
        );
        
        Collections.reverse(points);

        return Extrude.points(new Vector3d(0,0,boardHolderLength),
                points
        );
    }
    
}


result = new ServoMount().toCSG()